name: Android (F-Droid) CI

on:
  workflow_dispatch:
  push:
    branches:
      - release-1.3.7-fdroid

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: android-project

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build release-apk
    steps:
      - uses: TheXTech/checkout@v0.1

      - uses: TheXTech/branch-name@v0.1

      - name: Pull submodules
        shell: bash
        run: |
          git submodule update --init --recursive

      - name: Check for the upload support
        id: upload-check
        shell: bash
        run: |
          if [[ "${{ secrets.builds_login }}" != '' && \
                "${{ secrets.builds_password }}" != '' && \
                "${{ secrets.builds_host }}" != '' ]]; then
            echo "available=true" >> $GITHUB_OUTPUT;
          else
            echo "available=false" >> $GITHUB_OUTPUT;
          fi

      - name: Check for the upload support
        id: signing-check
        shell: bash
        run: |
          if [[ "${{ secrets.ANDROID_KEYSTORE }}" != '' && \
                "${{ secrets.RELEASE_STORE_PASSWORD }}" != '' && \
                "${{ secrets.RELEASE_KEY_PASSWORD }}" != '' && \
                "${{ secrets.RELEASE_KEY_ALIAS }}" != '' ]];
          then
              echo "available=true" >> $GITHUB_OUTPUT;
          else
              echo "available=false" >> $GITHUB_OUTPUT;
          fi

      - name: Extracting version name
        id: extract-version
        shell: bash
        run: |
            ver_name=`perl -ne 'm/THEXTECH_ANDROID_VERSION_NAME\s+"([\d\w.\-]+)"/ && print "$1"' ../version.cmake`
            echo "Version name in version.cmake: ${ver_name}"
            echo "ver_name=${ver_name}" >> $GITHUB_OUTPUT;

      - name: Install Dependencies
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq lftp apksigner

      - name: Set up JDK 21
        uses: actions/setup-java@v3.11.0
        with:
          java-version: 21
          distribution: 'temurin'

      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      # IMPORTANT NOTE: The SDK r23b is REQUIRED to support Android 4.1, 4.2, and 4.3, and to support non-Neon hardware

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Without NDK not compile and not normal error message. NDK is required
      #- name: Install NDK
      #  run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;23.2.8568313" --sdk_root=${ANDROID_SDK_ROOT}
      # Some times is have problems with permissions for ./gradle file. Then uncommit it code
      #    - name: Make gradlew executable
      #      run: chmod +x ./gradlew

      - name: Output version code
        run: echo VERSION_CODE=${{ github.run_number }} > ./version.properties

      - name: Import the signing
        if: ${{ steps.signing-check.outputs.available == 'true' }}
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > release-key.jks

      - name: Build unsigned with Gradle
        run: ./gradlew assembleFdroidRelease

      - name: Sign and rename APK
        if: ${{ steps.signing-check.outputs.available == 'true' }}
        shell: bash
        run: |
          apksigner sign --ks 'release-key.jks' \
            --ks-pass env:RELEASE_STORE_PASSWORD \
            --ks-key-alias ${{ secrets.RELEASE_KEY_ALIAS }} \
            --min-sdk-version 16 \
            --v1-signing-enabled \
            --v2-signing-enabled \
            --out thextech-android-fdroid-${{ steps.extract-version.outputs.ver_name }}.apk \
            thextech/build/outputs/apk/fdroid/release/thextech-fdroid-release-unsigned.apk
        env:
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          PIN_ALIAS: ${{ secrets.PIN_ALIAS }}
          DB_PASS_ALIAS: ${{ secrets.DB_PASS_ALIAS }}

      - name: Rename APK (unsigned)
        if: ${{ steps.signing-check.outputs.available != 'true' }}
        shell: bash
        run: |
          mv thextech/build/outputs/apk/fdroid/release/thextech-fdroid-release-unsigned.apk thextech-android-fdroid-${{ steps.extract-version.outputs.ver_name }}-unsigned.apk

      - name: Upload APK
        if: success() && ${{ steps.signing-check.outputs.available == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: thextech-android-${{ steps.extract-version.outputs.ver_name }}
          path: android-project/thextech-android-*.apk

      - name: Upload APK (unsigned)
        if: success() && ${{ steps.signing-check.outputs.available != 'true' }}
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: thextech-android-${{ steps.extract-version.outputs.ver_name }}-unsigned
          path: android-project/thextech-android-*.apk

      - name: Deploy to builds.wohlsoft.ru
        if: success() && github.event_name != 'pull_request' && steps.upload-check.outputs.available == 'true'
        continue-on-error: true
        shell: bash
        run: |
          UPLOAD_LIST="set ssl:verify-certificate no;"
          if [[ "${{ steps.signing-check.outputs.available }}" == 'true' ]]; then
              UPLOAD_LIST="${UPLOAD_LIST} put -O "www/android/fdroid/" ./thextech-android-fdroid-${{ steps.extract-version.outputs.ver_name }}.apk;"
          else
              UPLOAD_LIST="${UPLOAD_LIST} put -O "www/android/fdroid/" ./thextech-android-fdroid-${{ steps.extract-version.outputs.ver_name }}-unsigned.apk;"
          fi
          lftp -e "${UPLOAD_LIST} exit" -u ${{ secrets.builds_login }},${{ secrets.builds_password }} ${{ secrets.builds_host }}

      - name: List Build Directory
        if: always()
        shell: bash
        run: |
          git status
          ls -lR .
